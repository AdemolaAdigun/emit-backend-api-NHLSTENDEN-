{"version":3,"sources":["../src/app.js"],"names":["dotenv","config","app","use","bodyParser","json","express","urlencoded","extended","includes","process","env","NODE_ENV","routes","get","_","response","status","message","all","error","errorHandler"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEAA,mBAAOC,MAAP;;AAEA,IAAMC,GAAG,GAAG,0BAAZ;AAEAA,GAAG,CAACC,GAAJ,CAAQC,uBAAWC,IAAX,EAAR;AACAH,GAAG,CAACC,GAAJ,CAAQ,8BAAR;AACAD,GAAG,CAACC,GAAJ,CAAQ,uBAAR;AACAD,GAAG,CAACC,GAAJ,CAAQG,oBAAQD,IAAR,EAAR;AACAH,GAAG,CAACC,GAAJ,CAAQG,oBAAQC,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAR;AACAN,GAAG,CAACC,GAAJ,CAAQ,yBAAR;;AAEA,IAAI,CAAC,aAAD,EAAgB,SAAhB,EAA2B,YAA3B,EAAyCM,QAAzC,CAAkDC,OAAO,CAACC,GAAR,CAAYC,QAA9D,CAAJ,EAA6E;AACzEV,EAAAA,GAAG,CAACC,GAAJ,CAAQ,wBAAO,KAAP,CAAR;AACH;;AAEDD,GAAG,CAACC,GAAJ,CAAQU,kBAAR;AAEAX,GAAG,CAACY,GAAJ,CAAQ,GAAR,EAAa,UAACC,CAAD,EAAIC,QAAJ,EAAiB;AAC1BA,EAAAA,QAAQ,CAACC,MAAT,CAAgB,GAAhB,EAAqBZ,IAArB,CAA0B;AACtBY,IAAAA,MAAM,EAAE,SADc;AAEtBC,IAAAA,OAAO,EAAE;AAFa,GAA1B;AAIH,CALD;AAOAhB,GAAG,CAACiB,GAAJ,CAAQ,GAAR,EAAa,UAACJ,CAAD,EAAIC,QAAJ,EAAiB;AAC1BA,EAAAA,QAAQ,CAACC,MAAT,CAAgB,GAAhB,EAAqBZ,IAArB,CAA0B;AACtBY,IAAAA,MAAM,EAAE,OADc;AAEtBG,IAAAA,KAAK,EAAE;AAFe,GAA1B;AAIH,CALD;AAOAlB,GAAG,CAACC,GAAJ,CAAQkB,wBAAR;eAEenB,G","sourcesContent":["import compression from 'compression';\r\nimport cors from 'cors';\r\nimport dotenv from 'dotenv';\r\nimport express from 'express';\r\nimport errorHandler from './middleware/errorHandler';\r\nimport helmet from 'helmet';\r\nimport morgan from 'morgan';\r\nimport routes from './routes';\r\nimport bodyParser from \"body-parser\";\r\n\r\ndotenv.config();\r\n\r\nconst app = express();\r\n\r\napp.use(bodyParser.json());\r\napp.use(compression());\r\napp.use(cors());\r\napp.use(express.json());\r\napp.use(express.urlencoded({ extended: false }));\r\napp.use(helmet());\r\n\r\nif (['development', 'staging', 'production'].includes(process.env.NODE_ENV)) {\r\n    app.use(morgan('dev'));\r\n}\r\n\r\napp.use(routes);\r\n\r\napp.get('/', (_, response) => {\r\n    response.status(200).json({\r\n        status: 'success',\r\n        message: 'welcome to Emit-IT API v1',\r\n    });\r\n});\r\n\r\napp.all('*', (_, response) => {\r\n    response.status(404).json({\r\n        status: 'error',\r\n        error: 'resource not found',\r\n    });\r\n});\r\n\r\napp.use(errorHandler);\r\n\r\nexport default app;\r\n"],"file":"app.js"}